import pandas as pd
import streamlit as st
import seaborn as sns
from catboost import CatBoostRegressor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="SmartHealth-Watch-Analytics",
    page_icon="üìä",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üìä SmartHealth-Watch-Analytics")
st.markdown("### –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Å–º–∞—Ä—Ç-—á–∞—Å–æ–≤")

# –ü—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º –∏ –º–æ–¥–µ–ª–∏
PATH_DATA = "data/clean_smartwatch_health_data.csv"
PATH_MODEL = "data/my_model.cbm"

@st.cache_data
def load_data(path):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞"""
    data = pd.read_csv(path)
    # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –±–µ—Ä–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≤—ã–±–æ—Ä–∫—É
    data = data.sample(5000, random_state=42)
    return data

@st.cache_data
def load_model(path):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
    model = CatBoostRegressor()
    model.load_model(path)
    return model

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = load_data(PATH_DATA)

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
col1, col2 = st.columns([2, 1])

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –≤ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ
with col1:
    st.subheader("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
    st.write("–ü–∞—Ä–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–µ–π –º–µ–∂–¥—É –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
    plot = sns.pairplot(df)
    st.pyplot(plot.fig)

# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–æ –≤—Ç–æ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–µ
with col2:
    st.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞")
    st.write("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Å—Ç–æ—Ç—ã —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π:")

    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    activity_level = st.selectbox(
        "–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", 
        options=df['Activity Level'].unique(),
        help="–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
    )
    stress_level = st.selectbox(
        "–£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞", 
        options=df['Stress Level'].unique(),
        help="–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞."
    )
    step_count = st.slider(
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤", 
        min_value=int(min(df['Step Count'])), 
        max_value=int(max(df['Step Count'])),
        value=int(df['Step Count'].mean()),
        help="–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –∑–∞ –¥–µ–Ω—å."
    )
    blood_oxygen_level = st.slider(
        "–£—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ä–æ–¥–∞ –≤ –∫—Ä–æ–≤–∏ (%)", 
        min_value=int(min(df['Blood Oxygen Level (%)'])), 
        max_value=int(max(df['Blood Oxygen Level (%)'])),
        value=int(df['Blood Oxygen Level (%)'].mean()),
        help="–£–∫–∞–∂–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ä–æ–¥–∞ –≤ –∫—Ä–æ–≤–∏."
    )
    sleep_duration_hours = st.slider(
        "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∞ (—á–∞—Å—ã)", 
        min_value=float(min(df['Sleep Duration (hours)'])), 
        max_value=float(max(df['Sleep Duration (hours)'])),
        value=float(df['Sleep Duration (hours)'].mean()),
        step=0.1,
        help="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∞ –≤ —á–∞—Å–∞—Ö."
    )

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞
    dict_data = {
        "Blood Oxygen Level (%)": blood_oxygen_level,
        "Step Count": step_count,
        "Sleep Duration (hours)": sleep_duration_hours,
        "Activity Level": activity_level,
        "Stress Level": stress_level
    }
    data_predict = pd.DataFrame([dict_data])

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞
    button = st.button("üöÄ –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑", use_container_width=True)

    if button:
        # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
        model = load_model(PATH_MODEL)
        
        # –ü—Ä–æ–≥–Ω–æ–∑
        output = model.predict(data_predict)
        st.success(f"–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —á–∞—Å—Ç–æ—Ç–∞ —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π: **{round(output[0], 7)} BPM** ü´Ä")

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    st.markdown("---")
    st.markdown("""
    #### –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:
    - –≠—Ç–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–º–∞—Ä—Ç-—á–∞—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Å—Ç–æ—Ç—ã —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π.
    - –ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞ –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–∞–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–∞–∫ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤, —É—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ä–æ–¥–∞ –≤ –∫—Ä–æ–≤–∏ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∞.
    - –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑", —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    """)

# –°—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏
st.markdown("""
<style>
div.stButton > button:first-child {
    background-color: #4CAF50;
    color: white;
    font-weight: bold;
    border-radius: 8px;
    height: 3em;
}
div.stButton > button:hover {
    background-color: #45A049;
}
</style>
""", unsafe_allow_html=True)